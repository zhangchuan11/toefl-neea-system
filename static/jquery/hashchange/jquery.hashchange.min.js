(function(b) {
    var a = {
        init: function(c) {
            var d = b.extend({
                hash: "",
                onSet: function() {},
                onRemove: function() {}
            }, c);
            if (!d.hash) {
                return this
            }
            if (!b.hashchange) {
                b.hashchange = {};
                b.hashchange.onSet = {};
                b.hashchange.onRemove = {};
                b.hashchange.prevHash = "";
                b.hashchange.listener = function() {
                    if (window.location.hash === b.hashchange.prevHash) {
                        return
                    }
                    var f = b.hashchange.onRemove[b.hashchange.prevHash],
                        e = b.hashchange.onSet[window.location.hash];
                    if (f) {
                        f()
                    }
                    if (e) {
                        e()
                    }
                    b.hashchange.prevHash = window.location.hash
                };
                this.bind("hashchange", b.hashchange.listener)
            }
            b.hashchange.onSet[d.hash] = d.onSet;
            b.hashchange.onRemove[d.hash] = d.onRemove;
            if (window.location.hash === d.hash && window.location.hash !== b.hashchange.prevHash) {
                b.hashchange.listener()
            }
            return this
        }
    };
    b.fn.hashchange = function(c) {
        if (Object.prototype.toString.call(c) === "[object Array]") {
            for (var d = c.length - 1; d >= 0; d--) {
                a.init.apply(this, [c[d]])
            }
            return this
        }
        return a.init.apply(this, arguments)
    }
})(jQuery);